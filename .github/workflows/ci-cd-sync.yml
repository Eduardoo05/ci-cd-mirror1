name: Continuous integration

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  test-javascript:
    name: JavaScript Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run:  |
          git config --global user.name "Eduardo Franco"
          git config --global user.email "franco193@hotmail.com"

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: if [ -f package-lock.json ]; then npm ci; else npm install; fi #npm ci

      #- name: Check Format
        #id: npm-format-check
        #run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Build
        id: npm-build
        run: npm run build

      #- name: Test
        #id: npm-ci-test
        #run: npm run ci-test

  #test-action:
  #  name: GitHub Actions Test
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      id: checkout
  #      uses: actions/checkout@v4
      #- name: Test Local Action
        #id: test-action
        #uses: ./ #no tengo action definido en ese repo
        #with:
        #  milliseconds: 2000

      #- name: Print Output
        #id: output
        #run: echo $->"{{ steps.test-action.outputs.time }}"
  
  sync:
    name: Sync React code to Mirrors
    runs-on: ubuntu-latest
    needs: [test-javascript] #la sincronizacion solo correra si pasa el test
    steps:
      - name: Checkout React repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "Eduardo Franco"
          git config --global user.email "franco193@hotmail.com"

      - name: Push to Mirror 1
        env:
          MIRROR_TOKEN: ${{ secrets.MIRROR_TOKEN }}
        run: |
          echo "Sincronizando ci-cd-mirror1"
          git remote remove mirror1 || true
          git remote add mirror1 https://x-access-token:${MIRROR_TOKEN}@github.com/Eduardoo05/ci-cd-mirror1.git
          git push --force mirror1 main:main
      
      - name: Push to Mirror 2
        env:
          MIRROR_TOKEN: ${{ secrets.MIRROR_TOKEN }}
        run: |
          echo "Sincronizando ci-cd-mirror2"
          git remote remove mirror2 || true
          git remote add mirror2 https://x-access-token:${MIRROR_TOKEN}@github.com/Eduardoo05/ci-cd-mirror2.git
          git push --force mirror2 main:main
